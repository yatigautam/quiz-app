{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yati\\\\OneDrive\\\\Documents\\\\quiz_app\\\\src\\\\components\\\\Scoreboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Scoreboard = () => {\n  _s();\n  const [attempts, setAttempts] = useState([]);\n\n  // Fetch quiz history from IndexedDB when component mounts\n  useEffect(() => {\n    const fetchQuizHistory = () => {\n      const request = indexedDB.open(\"QuizDatabase\", 1);\n      request.onsuccess = event => {\n        const db = event.target.result;\n        const transaction = db.transaction(\"quizHistory\", \"readonly\");\n        const store = transaction.objectStore(\"quizHistory\");\n        const getAllRequest = store.getAll();\n        getAllRequest.onsuccess = event => {\n          const history = event.target.result;\n          // Sort by most recent attempt\n          setAttempts(history.sort((a, b) => new Date(b.date) - new Date(a.date)));\n        };\n        getAllRequest.onerror = event => {\n          console.error(\"Failed to fetch quiz history:\", event.target.error);\n        };\n      };\n      request.onerror = event => {\n        console.error(\"IndexedDB error:\", event.target.error);\n      };\n    };\n    fetchQuizHistory();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scoreboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Scoreboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), attempts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No attempts recorded yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"score-list\",\n      children: attempts.map((attempt, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"score-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Attempt \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this), \": \", attempt.date, \" - Score: \", attempt.score]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Scoreboard, \"EW66LKwk1sxwIHDU5WDYIvEwhpc=\");\n_c = Scoreboard;\nexport default Scoreboard;\nvar _c;\n$RefreshReg$(_c, \"Scoreboard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Scoreboard","_s","attempts","setAttempts","fetchQuizHistory","request","indexedDB","open","onsuccess","event","db","target","result","transaction","store","objectStore","getAllRequest","getAll","history","sort","a","b","Date","date","onerror","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","attempt","index","score","_c","$RefreshReg$"],"sources":["C:/Users/yati/OneDrive/Documents/quiz_app/src/components/Scoreboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst Scoreboard = () => {\r\n  const [attempts, setAttempts] = useState([]);\r\n\r\n  // Fetch quiz history from IndexedDB when component mounts\r\n  useEffect(() => {\r\n    const fetchQuizHistory = () => {\r\n      const request = indexedDB.open(\"QuizDatabase\", 1);\r\n\r\n      request.onsuccess = (event) => {\r\n        const db = event.target.result;\r\n        const transaction = db.transaction(\"quizHistory\", \"readonly\");\r\n        const store = transaction.objectStore(\"quizHistory\");\r\n        const getAllRequest = store.getAll();\r\n\r\n        getAllRequest.onsuccess = (event) => {\r\n          const history = event.target.result;\r\n          // Sort by most recent attempt\r\n          setAttempts(history.sort((a, b) => new Date(b.date) - new Date(a.date)));\r\n        };\r\n\r\n        getAllRequest.onerror = (event) => {\r\n          console.error(\"Failed to fetch quiz history:\", event.target.error);\r\n        };\r\n      };\r\n\r\n      request.onerror = (event) => {\r\n        console.error(\"IndexedDB error:\", event.target.error);\r\n      };\r\n    };\r\n\r\n    fetchQuizHistory();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"scoreboard-container\">\r\n      <h3>Scoreboard</h3>\r\n      {attempts.length === 0 ? (\r\n        <p>No attempts recorded yet.</p>\r\n      ) : (\r\n        <ul className=\"score-list\">\r\n          {attempts.map((attempt, index) => (\r\n            <li key={index} className=\"score-item\">\r\n              <strong>Attempt {index + 1}</strong>: {attempt.date} - Score: {attempt.score}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scoreboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}