{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yati\\\\OneDrive\\\\Documents\\\\quiz_app\\\\src\\\\pages\\\\QuizPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Timer from '../components/Timer';\nimport Scoreboard from '../components/Scoreboard';\nimport questions from '../components/Question';\nimport './QuizPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizPage = () => {\n  _s();\n  const [showInstructions, setShowInstructions] = useState(true);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [userAnswers, setUserAnswers] = useState({});\n  const [quizCompleted, setQuizCompleted] = useState(false);\n  const [score, setScore] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(30);\n  useEffect(() => {\n    if (!showInstructions && timeLeft > 0) {\n      const timer = setInterval(() => {\n        setTimeLeft(prevTime => {\n          if (prevTime === 0) {\n            clearInterval(timer);\n            return 0;\n          }\n          return prevTime - 1;\n        });\n      }, 1000);\n      return () => clearInterval(timer);\n    }\n  }, [showInstructions, timeLeft]);\n  const handleStartQuiz = () => {\n    setShowInstructions(false);\n    setTimeLeft(30);\n  };\n  const handleAnswerSelect = answer => {\n    setUserAnswers({\n      ...userAnswers,\n      [currentQuestionIndex]: answer\n    });\n    if (questions[currentQuestionIndex].answer === answer) {\n      setScore(score + 1);\n    }\n    nextQuestion();\n  };\n  const nextQuestion = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setTimeLeft(30);\n    } else {\n      setQuizCompleted(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: showInstructions ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"instructions\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Instructions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"For multiple-choice questions, select the one best answer (A, B, C, or D).\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"For integer-type questions, write your numerical answer clearly.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"No calculators unless specified.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"You have 30 minutes to complete this quiz.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartQuiz,\n        children: \"Start Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this) : quizCompleted ? /*#__PURE__*/_jsxDEV(Scoreboard, {\n      score: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Question \", currentQuestionIndex + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: questions[currentQuestionIndex].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), questions[currentQuestionIndex].options ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: questions[currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleAnswerSelect(option),\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        onChange: e => setUserAnswers({\n          ...userAnswers,\n          [currentQuestionIndex]: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Timer, {\n        timeLeft: timeLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(QuizPage, \"OoMMNkhDEkYghdG6yXHBA4KUJKM=\");\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useEffect","Timer","Scoreboard","questions","jsxDEV","_jsxDEV","QuizPage","_s","showInstructions","setShowInstructions","currentQuestionIndex","setCurrentQuestionIndex","userAnswers","setUserAnswers","quizCompleted","setQuizCompleted","score","setScore","timeLeft","setTimeLeft","timer","setInterval","prevTime","clearInterval","handleStartQuiz","handleAnswerSelect","answer","nextQuestion","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","question","options","map","option","index","type","onChange","e","target","value","_c","$RefreshReg$"],"sources":["C:/Users/yati/OneDrive/Documents/quiz_app/src/pages/QuizPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Timer from '../components/Timer';\r\nimport Scoreboard from '../components/Scoreboard';\r\nimport questions from '../components/Question';\r\nimport './QuizPage.css';\r\n\r\nconst QuizPage = () => {\r\n    const [showInstructions, setShowInstructions] = useState(true);\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n    const [userAnswers, setUserAnswers] = useState({});\r\n    const [quizCompleted, setQuizCompleted] = useState(false);\r\n    const [score, setScore] = useState(0);\r\n    const [timeLeft, setTimeLeft] = useState(30);\r\n    \r\n    useEffect(() => {\r\n        if (!showInstructions && timeLeft > 0) {\r\n            const timer = setInterval(() => {\r\n                setTimeLeft((prevTime) => {\r\n                    if (prevTime === 0) {\r\n                        clearInterval(timer);\r\n                        return 0;\r\n                    }\r\n                    return prevTime - 1;\r\n                });\r\n            }, 1000);\r\n\r\n            return () => clearInterval(timer);\r\n        }\r\n    }, [showInstructions, timeLeft]);\r\n\r\n    const handleStartQuiz = () => {\r\n        setShowInstructions(false);\r\n        setTimeLeft(30);\r\n    };\r\n\r\n    const handleAnswerSelect = (answer) => {\r\n        setUserAnswers({ ...userAnswers, [currentQuestionIndex]: answer });\r\n        if (questions[currentQuestionIndex].answer === answer) {\r\n            setScore(score + 1);\r\n        }\r\n        nextQuestion();\r\n    };\r\n\r\n    const nextQuestion = () => {\r\n        if (currentQuestionIndex < questions.length - 1) {\r\n            setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n            setTimeLeft(30);\r\n        } else {\r\n            setQuizCompleted(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"quiz-container\">\r\n            {showInstructions ? (\r\n                <div className=\"instructions\">\r\n                    <h2>Instructions</h2>\r\n                    <ul>\r\n                        <li>For multiple-choice questions, select the one best answer (A, B, C, or D).</li>\r\n                        <li>For integer-type questions, write your numerical answer clearly.</li>\r\n                        <li>No calculators unless specified.</li>\r\n                        <li>You have 30 minutes to complete this quiz.</li>\r\n                    </ul>\r\n                    <button onClick={handleStartQuiz}>Start Quiz</button>\r\n                </div>\r\n            ) : quizCompleted ? (\r\n                <Scoreboard score={score} />\r\n            ) : (\r\n                <div className=\"question-section\">\r\n                    <h3>Question {currentQuestionIndex + 1}</h3>\r\n                    <p>{questions[currentQuestionIndex].question}</p>\r\n                    {questions[currentQuestionIndex].options ? (\r\n                        <ul>\r\n                            {questions[currentQuestionIndex].options.map((option, index) => (\r\n                                <li key={index} onClick={() => handleAnswerSelect(option)}>{option}</li>\r\n                            ))}\r\n                        </ul>\r\n                    ) : (\r\n                        <input\r\n                            type=\"number\"\r\n                            onChange={(e) => setUserAnswers({ ...userAnswers, [currentQuestionIndex]: e.target.value })}\r\n                        />\r\n                    )}\r\n                    <Timer timeLeft={timeLeft} />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QuizPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}