{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Scoreboard=()=>{const[attempts,setAttempts]=useState([]);// Fetch quiz history from IndexedDB when component mounts\nuseEffect(()=>{const fetchQuizHistory=()=>{const request=indexedDB.open(\"QuizDatabase\",1);request.onsuccess=event=>{const db=event.target.result;const transaction=db.transaction(\"quizHistory\",\"readonly\");const store=transaction.objectStore(\"quizHistory\");const getAllRequest=store.getAll();getAllRequest.onsuccess=event=>{const history=event.target.result;// Sort by most recent attempt\nsetAttempts(history.sort((a,b)=>new Date(b.date)-new Date(a.date)));};getAllRequest.onerror=event=>{console.error(\"Failed to fetch quiz history:\",event.target.error);};};request.onerror=event=>{console.error(\"IndexedDB error:\",event.target.error);};};fetchQuizHistory();},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"scoreboard-container\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Scoreboard\"}),attempts.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"No attempts recorded yet.\"}):/*#__PURE__*/_jsx(\"ul\",{className:\"score-list\",children:attempts.map((attempt,index)=>/*#__PURE__*/_jsxs(\"li\",{className:\"score-item\",children:[/*#__PURE__*/_jsxs(\"strong\",{children:[\"Attempt \",index+1]}),\": \",attempt.date,\" - Score: \",attempt.score]},index))})]});};export default Scoreboard;","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","Scoreboard","attempts","setAttempts","fetchQuizHistory","request","indexedDB","open","onsuccess","event","db","target","result","transaction","store","objectStore","getAllRequest","getAll","history","sort","a","b","Date","date","onerror","console","error","className","children","length","map","attempt","index","score"],"sources":["C:/Users/yati/OneDrive/Documents/quiz_app/src/components/Scoreboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst Scoreboard = () => {\r\n  const [attempts, setAttempts] = useState([]);\r\n\r\n  // Fetch quiz history from IndexedDB when component mounts\r\n  useEffect(() => {\r\n    const fetchQuizHistory = () => {\r\n      const request = indexedDB.open(\"QuizDatabase\", 1);\r\n\r\n      request.onsuccess = (event) => {\r\n        const db = event.target.result;\r\n        const transaction = db.transaction(\"quizHistory\", \"readonly\");\r\n        const store = transaction.objectStore(\"quizHistory\");\r\n        const getAllRequest = store.getAll();\r\n\r\n        getAllRequest.onsuccess = (event) => {\r\n          const history = event.target.result;\r\n          // Sort by most recent attempt\r\n          setAttempts(history.sort((a, b) => new Date(b.date) - new Date(a.date)));\r\n        };\r\n\r\n        getAllRequest.onerror = (event) => {\r\n          console.error(\"Failed to fetch quiz history:\", event.target.error);\r\n        };\r\n      };\r\n\r\n      request.onerror = (event) => {\r\n        console.error(\"IndexedDB error:\", event.target.error);\r\n      };\r\n    };\r\n\r\n    fetchQuizHistory();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"scoreboard-container\">\r\n      <h3>Scoreboard</h3>\r\n      {attempts.length === 0 ? (\r\n        <p>No attempts recorded yet.</p>\r\n      ) : (\r\n        <ul className=\"score-list\">\r\n          {attempts.map((attempt, index) => (\r\n            <li key={index} className=\"score-item\">\r\n              <strong>Attempt {index + 1}</strong>: {attempt.date} - Score: {attempt.score}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scoreboard;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACvB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CAE5C;AACAD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAS,gBAAgB,CAAGA,CAAA,GAAM,CAC7B,KAAM,CAAAC,OAAO,CAAGC,SAAS,CAACC,IAAI,CAAC,cAAc,CAAE,CAAC,CAAC,CAEjDF,OAAO,CAACG,SAAS,CAAIC,KAAK,EAAK,CAC7B,KAAM,CAAAC,EAAE,CAAGD,KAAK,CAACE,MAAM,CAACC,MAAM,CAC9B,KAAM,CAAAC,WAAW,CAAGH,EAAE,CAACG,WAAW,CAAC,aAAa,CAAE,UAAU,CAAC,CAC7D,KAAM,CAAAC,KAAK,CAAGD,WAAW,CAACE,WAAW,CAAC,aAAa,CAAC,CACpD,KAAM,CAAAC,aAAa,CAAGF,KAAK,CAACG,MAAM,CAAC,CAAC,CAEpCD,aAAa,CAACR,SAAS,CAAIC,KAAK,EAAK,CACnC,KAAM,CAAAS,OAAO,CAAGT,KAAK,CAACE,MAAM,CAACC,MAAM,CACnC;AACAT,WAAW,CAACe,OAAO,CAACC,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAK,GAAI,CAAAC,IAAI,CAACD,CAAC,CAACE,IAAI,CAAC,CAAG,GAAI,CAAAD,IAAI,CAACF,CAAC,CAACG,IAAI,CAAC,CAAC,CAAC,CAC1E,CAAC,CAEDP,aAAa,CAACQ,OAAO,CAAIf,KAAK,EAAK,CACjCgB,OAAO,CAACC,KAAK,CAAC,+BAA+B,CAAEjB,KAAK,CAACE,MAAM,CAACe,KAAK,CAAC,CACpE,CAAC,CACH,CAAC,CAEDrB,OAAO,CAACmB,OAAO,CAAIf,KAAK,EAAK,CAC3BgB,OAAO,CAACC,KAAK,CAAC,kBAAkB,CAAEjB,KAAK,CAACE,MAAM,CAACe,KAAK,CAAC,CACvD,CAAC,CACH,CAAC,CAEDtB,gBAAgB,CAAC,CAAC,CACpB,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEJ,KAAA,QAAK2B,SAAS,CAAC,sBAAsB,CAAAC,QAAA,eACnC9B,IAAA,OAAA8B,QAAA,CAAI,YAAU,CAAI,CAAC,CAClB1B,QAAQ,CAAC2B,MAAM,GAAK,CAAC,cACpB/B,IAAA,MAAA8B,QAAA,CAAG,2BAAyB,CAAG,CAAC,cAEhC9B,IAAA,OAAI6B,SAAS,CAAC,YAAY,CAAAC,QAAA,CACvB1B,QAAQ,CAAC4B,GAAG,CAAC,CAACC,OAAO,CAAEC,KAAK,gBAC3BhC,KAAA,OAAgB2B,SAAS,CAAC,YAAY,CAAAC,QAAA,eACpC5B,KAAA,WAAA4B,QAAA,EAAQ,UAAQ,CAACI,KAAK,CAAG,CAAC,EAAS,CAAC,KAAE,CAACD,OAAO,CAACR,IAAI,CAAC,YAAU,CAACQ,OAAO,CAACE,KAAK,GADrED,KAEL,CACL,CAAC,CACA,CACL,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAA/B,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}